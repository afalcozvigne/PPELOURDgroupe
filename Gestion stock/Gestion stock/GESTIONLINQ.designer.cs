#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gestion_stock
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GestionStock")]
	public partial class GESTIONLINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertBonDeCommande(BonDeCommande instance);
    partial void UpdateBonDeCommande(BonDeCommande instance);
    partial void DeleteBonDeCommande(BonDeCommande instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertCommandeEnt(CommandeEnt instance);
    partial void UpdateCommandeEnt(CommandeEnt instance);
    partial void DeleteCommandeEnt(CommandeEnt instance);
    partial void InsertConcerne(Concerne instance);
    partial void UpdateConcerne(Concerne instance);
    partial void DeleteConcerne(Concerne instance);
    partial void InsertDate(Date instance);
    partial void UpdateDate(Date instance);
    partial void DeleteDate(Date instance);
    partial void InsertFournisseur(Fournisseur instance);
    partial void UpdateFournisseur(Fournisseur instance);
    partial void DeleteFournisseur(Fournisseur instance);
    partial void InsertLivraisonF(LivraisonF instance);
    partial void UpdateLivraisonF(LivraisonF instance);
    partial void DeleteLivraisonF(LivraisonF instance);
    partial void InsertLivraisonW(LivraisonW instance);
    partial void UpdateLivraisonW(LivraisonW instance);
    partial void DeleteLivraisonW(LivraisonW instance);
    partial void InsertProduits(Produits instance);
    partial void UpdateProduits(Produits instance);
    partial void DeleteProduits(Produits instance);
    partial void InsertStaffs(Staffs instance);
    partial void UpdateStaffs(Staffs instance);
    partial void DeleteStaffs(Staffs instance);
    partial void InsertUtilisateur(Utilisateur instance);
    partial void UpdateUtilisateur(Utilisateur instance);
    partial void DeleteUtilisateur(Utilisateur instance);
    #endregion
		
		public GESTIONLINQDataContext() : 
				base(global::Gestion_stock.Properties.Settings.Default.GestionStockConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GESTIONLINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GESTIONLINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GESTIONLINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GESTIONLINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BonDeCommande> BonDeCommande
		{
			get
			{
				return this.GetTable<BonDeCommande>();
			}
		}
		
		public System.Data.Linq.Table<Client> Client
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<CommandeEnt> CommandeEnt
		{
			get
			{
				return this.GetTable<CommandeEnt>();
			}
		}
		
		public System.Data.Linq.Table<Concerne> Concerne
		{
			get
			{
				return this.GetTable<Concerne>();
			}
		}
		
		public System.Data.Linq.Table<Date> Date
		{
			get
			{
				return this.GetTable<Date>();
			}
		}
		
		public System.Data.Linq.Table<Fournisseur> Fournisseur
		{
			get
			{
				return this.GetTable<Fournisseur>();
			}
		}
		
		public System.Data.Linq.Table<LivraisonF> LivraisonF
		{
			get
			{
				return this.GetTable<LivraisonF>();
			}
		}
		
		public System.Data.Linq.Table<LivraisonW> LivraisonW
		{
			get
			{
				return this.GetTable<LivraisonW>();
			}
		}
		
		public System.Data.Linq.Table<Produits> Produits
		{
			get
			{
				return this.GetTable<Produits>();
			}
		}
		
		public System.Data.Linq.Table<Staffs> Staffs
		{
			get
			{
				return this.GetTable<Staffs>();
			}
		}
		
		public System.Data.Linq.Table<Utilisateur> Utilisateur
		{
			get
			{
				return this.GetTable<Utilisateur>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonDeCommande")]
	public partial class BonDeCommande : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_boncmd;
		
		private int _id_concerne;
		
		private int _id_client;
		
		private System.DateTime _date_cmd;
		
		private EntitySet<LivraisonW> _LivraisonW;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Concerne> _Concerne;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_boncmdChanging(int value);
    partial void Onid_boncmdChanged();
    partial void Onid_concerneChanging(int value);
    partial void Onid_concerneChanged();
    partial void Onid_clientChanging(int value);
    partial void Onid_clientChanged();
    partial void Ondate_cmdChanging(System.DateTime value);
    partial void Ondate_cmdChanged();
    #endregion
		
		public BonDeCommande()
		{
			this._LivraisonW = new EntitySet<LivraisonW>(new Action<LivraisonW>(this.attach_LivraisonW), new Action<LivraisonW>(this.detach_LivraisonW));
			this._Client = default(EntityRef<Client>);
			this._Concerne = default(EntityRef<Concerne>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_boncmd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_boncmd
		{
			get
			{
				return this._id_boncmd;
			}
			set
			{
				if ((this._id_boncmd != value))
				{
					this.Onid_boncmdChanging(value);
					this.SendPropertyChanging();
					this._id_boncmd = value;
					this.SendPropertyChanged("id_boncmd");
					this.Onid_boncmdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_concerne", DbType="Int NOT NULL")]
		public int id_concerne
		{
			get
			{
				return this._id_concerne;
			}
			set
			{
				if ((this._id_concerne != value))
				{
					if (this._Concerne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_concerneChanging(value);
					this.SendPropertyChanging();
					this._id_concerne = value;
					this.SendPropertyChanged("id_concerne");
					this.Onid_concerneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_client", DbType="Int NOT NULL")]
		public int id_client
		{
			get
			{
				return this._id_client;
			}
			set
			{
				if ((this._id_client != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clientChanging(value);
					this.SendPropertyChanging();
					this._id_client = value;
					this.SendPropertyChanged("id_client");
					this.Onid_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_cmd", DbType="Date NOT NULL")]
		public System.DateTime date_cmd
		{
			get
			{
				return this._date_cmd;
			}
			set
			{
				if ((this._date_cmd != value))
				{
					this.Ondate_cmdChanging(value);
					this.SendPropertyChanging();
					this._date_cmd = value;
					this.SendPropertyChanged("date_cmd");
					this.Ondate_cmdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonDeCommande_LivraisonW", Storage="_LivraisonW", ThisKey="id_boncmd", OtherKey="id_boncmd")]
		public EntitySet<LivraisonW> LivraisonW
		{
			get
			{
				return this._LivraisonW;
			}
			set
			{
				this._LivraisonW.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_BonDeCommande", Storage="_Client", ThisKey="id_client", OtherKey="id_client", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.BonDeCommande.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.BonDeCommande.Add(this);
						this._id_client = value.id_client;
					}
					else
					{
						this._id_client = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concerne_BonDeCommande", Storage="_Concerne", ThisKey="id_concerne", OtherKey="id_concerne", IsForeignKey=true)]
		public Concerne Concerne
		{
			get
			{
				return this._Concerne.Entity;
			}
			set
			{
				Concerne previousValue = this._Concerne.Entity;
				if (((previousValue != value) 
							|| (this._Concerne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Concerne.Entity = null;
						previousValue.BonDeCommande.Remove(this);
					}
					this._Concerne.Entity = value;
					if ((value != null))
					{
						value.BonDeCommande.Add(this);
						this._id_concerne = value.id_concerne;
					}
					else
					{
						this._id_concerne = default(int);
					}
					this.SendPropertyChanged("Concerne");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LivraisonW(LivraisonW entity)
		{
			this.SendPropertyChanging();
			entity.BonDeCommande = this;
		}
		
		private void detach_LivraisonW(LivraisonW entity)
		{
			this.SendPropertyChanging();
			entity.BonDeCommande = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_client;
		
		private string _nom_client;
		
		private string _prenom_client;
		
		private string _add_client;
		
		private string _tel_client;
		
		private System.Data.Linq.Binary _mail_client;
		
		private EntitySet<BonDeCommande> _BonDeCommande;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_clientChanging(int value);
    partial void Onid_clientChanged();
    partial void Onnom_clientChanging(string value);
    partial void Onnom_clientChanged();
    partial void Onprenom_clientChanging(string value);
    partial void Onprenom_clientChanged();
    partial void Onadd_clientChanging(string value);
    partial void Onadd_clientChanged();
    partial void Ontel_clientChanging(string value);
    partial void Ontel_clientChanged();
    partial void Onmail_clientChanging(System.Data.Linq.Binary value);
    partial void Onmail_clientChanged();
    #endregion
		
		public Client()
		{
			this._BonDeCommande = new EntitySet<BonDeCommande>(new Action<BonDeCommande>(this.attach_BonDeCommande), new Action<BonDeCommande>(this.detach_BonDeCommande));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_client", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_client
		{
			get
			{
				return this._id_client;
			}
			set
			{
				if ((this._id_client != value))
				{
					this.Onid_clientChanging(value);
					this.SendPropertyChanging();
					this._id_client = value;
					this.SendPropertyChanged("id_client");
					this.Onid_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom_client", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nom_client
		{
			get
			{
				return this._nom_client;
			}
			set
			{
				if ((this._nom_client != value))
				{
					this.Onnom_clientChanging(value);
					this.SendPropertyChanging();
					this._nom_client = value;
					this.SendPropertyChanged("nom_client");
					this.Onnom_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom_client", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prenom_client
		{
			get
			{
				return this._prenom_client;
			}
			set
			{
				if ((this._prenom_client != value))
				{
					this.Onprenom_clientChanging(value);
					this.SendPropertyChanging();
					this._prenom_client = value;
					this.SendPropertyChanged("prenom_client");
					this.Onprenom_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_client", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string add_client
		{
			get
			{
				return this._add_client;
			}
			set
			{
				if ((this._add_client != value))
				{
					this.Onadd_clientChanging(value);
					this.SendPropertyChanging();
					this._add_client = value;
					this.SendPropertyChanged("add_client");
					this.Onadd_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel_client", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tel_client
		{
			get
			{
				return this._tel_client;
			}
			set
			{
				if ((this._tel_client != value))
				{
					this.Ontel_clientChanging(value);
					this.SendPropertyChanging();
					this._tel_client = value;
					this.SendPropertyChanged("tel_client");
					this.Ontel_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail_client", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary mail_client
		{
			get
			{
				return this._mail_client;
			}
			set
			{
				if ((this._mail_client != value))
				{
					this.Onmail_clientChanging(value);
					this.SendPropertyChanging();
					this._mail_client = value;
					this.SendPropertyChanged("mail_client");
					this.Onmail_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_BonDeCommande", Storage="_BonDeCommande", ThisKey="id_client", OtherKey="id_client")]
		public EntitySet<BonDeCommande> BonDeCommande
		{
			get
			{
				return this._BonDeCommande;
			}
			set
			{
				this._BonDeCommande.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonDeCommande(BonDeCommande entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_BonDeCommande(BonDeCommande entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommandeEnt")]
	public partial class CommandeEnt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cmde;
		
		private int _id_date;
		
		private int _id_concerne;
		
		private int _id_fournisseur;
		
		private int _id_utilisateur;
		
		private EntityRef<Concerne> _Concerne;
		
		private EntityRef<Date> _Date;
		
		private EntityRef<Fournisseur> _Fournisseur;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cmdeChanging(int value);
    partial void Onid_cmdeChanged();
    partial void Onid_dateChanging(int value);
    partial void Onid_dateChanged();
    partial void Onid_concerneChanging(int value);
    partial void Onid_concerneChanged();
    partial void Onid_fournisseurChanging(int value);
    partial void Onid_fournisseurChanged();
    partial void Onid_utilisateurChanging(int value);
    partial void Onid_utilisateurChanged();
    #endregion
		
		public CommandeEnt()
		{
			this._Concerne = default(EntityRef<Concerne>);
			this._Date = default(EntityRef<Date>);
			this._Fournisseur = default(EntityRef<Fournisseur>);
			this._Utilisateur = default(EntityRef<Utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cmde", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_cmde
		{
			get
			{
				return this._id_cmde;
			}
			set
			{
				if ((this._id_cmde != value))
				{
					this.Onid_cmdeChanging(value);
					this.SendPropertyChanging();
					this._id_cmde = value;
					this.SendPropertyChanged("id_cmde");
					this.Onid_cmdeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_date", DbType="Int NOT NULL")]
		public int id_date
		{
			get
			{
				return this._id_date;
			}
			set
			{
				if ((this._id_date != value))
				{
					if (this._Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_dateChanging(value);
					this.SendPropertyChanging();
					this._id_date = value;
					this.SendPropertyChanged("id_date");
					this.Onid_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_concerne", DbType="Int NOT NULL")]
		public int id_concerne
		{
			get
			{
				return this._id_concerne;
			}
			set
			{
				if ((this._id_concerne != value))
				{
					if (this._Concerne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_concerneChanging(value);
					this.SendPropertyChanging();
					this._id_concerne = value;
					this.SendPropertyChanged("id_concerne");
					this.Onid_concerneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fournisseur", DbType="Int NOT NULL")]
		public int id_fournisseur
		{
			get
			{
				return this._id_fournisseur;
			}
			set
			{
				if ((this._id_fournisseur != value))
				{
					if (this._Fournisseur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_fournisseurChanging(value);
					this.SendPropertyChanging();
					this._id_fournisseur = value;
					this.SendPropertyChanged("id_fournisseur");
					this.Onid_fournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_utilisateur", DbType="Int NOT NULL")]
		public int id_utilisateur
		{
			get
			{
				return this._id_utilisateur;
			}
			set
			{
				if ((this._id_utilisateur != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_utilisateurChanging(value);
					this.SendPropertyChanging();
					this._id_utilisateur = value;
					this.SendPropertyChanged("id_utilisateur");
					this.Onid_utilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concerne_CommandeEnt", Storage="_Concerne", ThisKey="id_concerne", OtherKey="id_concerne", IsForeignKey=true)]
		public Concerne Concerne
		{
			get
			{
				return this._Concerne.Entity;
			}
			set
			{
				Concerne previousValue = this._Concerne.Entity;
				if (((previousValue != value) 
							|| (this._Concerne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Concerne.Entity = null;
						previousValue.CommandeEnt.Remove(this);
					}
					this._Concerne.Entity = value;
					if ((value != null))
					{
						value.CommandeEnt.Add(this);
						this._id_concerne = value.id_concerne;
					}
					else
					{
						this._id_concerne = default(int);
					}
					this.SendPropertyChanged("Concerne");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Date_CommandeEnt", Storage="_Date", ThisKey="id_date", OtherKey="id_date", IsForeignKey=true)]
		public Date Date
		{
			get
			{
				return this._Date.Entity;
			}
			set
			{
				Date previousValue = this._Date.Entity;
				if (((previousValue != value) 
							|| (this._Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Date.Entity = null;
						previousValue.CommandeEnt.Remove(this);
					}
					this._Date.Entity = value;
					if ((value != null))
					{
						value.CommandeEnt.Add(this);
						this._id_date = value.id_date;
					}
					else
					{
						this._id_date = default(int);
					}
					this.SendPropertyChanged("Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fournisseur_CommandeEnt", Storage="_Fournisseur", ThisKey="id_fournisseur", OtherKey="id_fournisseur", IsForeignKey=true)]
		public Fournisseur Fournisseur
		{
			get
			{
				return this._Fournisseur.Entity;
			}
			set
			{
				Fournisseur previousValue = this._Fournisseur.Entity;
				if (((previousValue != value) 
							|| (this._Fournisseur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fournisseur.Entity = null;
						previousValue.CommandeEnt.Remove(this);
					}
					this._Fournisseur.Entity = value;
					if ((value != null))
					{
						value.CommandeEnt.Add(this);
						this._id_fournisseur = value.id_fournisseur;
					}
					else
					{
						this._id_fournisseur = default(int);
					}
					this.SendPropertyChanged("Fournisseur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_CommandeEnt", Storage="_Utilisateur", ThisKey="id_utilisateur", OtherKey="id_utilisateur", IsForeignKey=true)]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.CommandeEnt.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.CommandeEnt.Add(this);
						this._id_utilisateur = value.id_utilisateur;
					}
					else
					{
						this._id_utilisateur = default(int);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Concerne")]
	public partial class Concerne : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_concerne;
		
		private int _qte_concerne;
		
		private int _id_produits;
		
		private EntitySet<BonDeCommande> _BonDeCommande;
		
		private EntitySet<CommandeEnt> _CommandeEnt;
		
		private EntityRef<Produits> _Produits;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_concerneChanging(int value);
    partial void Onid_concerneChanged();
    partial void Onqte_concerneChanging(int value);
    partial void Onqte_concerneChanged();
    partial void Onid_produitsChanging(int value);
    partial void Onid_produitsChanged();
    #endregion
		
		public Concerne()
		{
			this._BonDeCommande = new EntitySet<BonDeCommande>(new Action<BonDeCommande>(this.attach_BonDeCommande), new Action<BonDeCommande>(this.detach_BonDeCommande));
			this._CommandeEnt = new EntitySet<CommandeEnt>(new Action<CommandeEnt>(this.attach_CommandeEnt), new Action<CommandeEnt>(this.detach_CommandeEnt));
			this._Produits = default(EntityRef<Produits>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_concerne", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_concerne
		{
			get
			{
				return this._id_concerne;
			}
			set
			{
				if ((this._id_concerne != value))
				{
					this.Onid_concerneChanging(value);
					this.SendPropertyChanging();
					this._id_concerne = value;
					this.SendPropertyChanged("id_concerne");
					this.Onid_concerneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qte_concerne", DbType="Int NOT NULL")]
		public int qte_concerne
		{
			get
			{
				return this._qte_concerne;
			}
			set
			{
				if ((this._qte_concerne != value))
				{
					this.Onqte_concerneChanging(value);
					this.SendPropertyChanging();
					this._qte_concerne = value;
					this.SendPropertyChanged("qte_concerne");
					this.Onqte_concerneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produits", DbType="Int NOT NULL")]
		public int id_produits
		{
			get
			{
				return this._id_produits;
			}
			set
			{
				if ((this._id_produits != value))
				{
					if (this._Produits.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produitsChanging(value);
					this.SendPropertyChanging();
					this._id_produits = value;
					this.SendPropertyChanged("id_produits");
					this.Onid_produitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concerne_BonDeCommande", Storage="_BonDeCommande", ThisKey="id_concerne", OtherKey="id_concerne")]
		public EntitySet<BonDeCommande> BonDeCommande
		{
			get
			{
				return this._BonDeCommande;
			}
			set
			{
				this._BonDeCommande.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concerne_CommandeEnt", Storage="_CommandeEnt", ThisKey="id_concerne", OtherKey="id_concerne")]
		public EntitySet<CommandeEnt> CommandeEnt
		{
			get
			{
				return this._CommandeEnt;
			}
			set
			{
				this._CommandeEnt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produits_Concerne", Storage="_Produits", ThisKey="id_produits", OtherKey="id_produits", IsForeignKey=true)]
		public Produits Produits
		{
			get
			{
				return this._Produits.Entity;
			}
			set
			{
				Produits previousValue = this._Produits.Entity;
				if (((previousValue != value) 
							|| (this._Produits.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produits.Entity = null;
						previousValue.Concerne.Remove(this);
					}
					this._Produits.Entity = value;
					if ((value != null))
					{
						value.Concerne.Add(this);
						this._id_produits = value.id_produits;
					}
					else
					{
						this._id_produits = default(int);
					}
					this.SendPropertyChanged("Produits");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonDeCommande(BonDeCommande entity)
		{
			this.SendPropertyChanging();
			entity.Concerne = this;
		}
		
		private void detach_BonDeCommande(BonDeCommande entity)
		{
			this.SendPropertyChanging();
			entity.Concerne = null;
		}
		
		private void attach_CommandeEnt(CommandeEnt entity)
		{
			this.SendPropertyChanging();
			entity.Concerne = this;
		}
		
		private void detach_CommandeEnt(CommandeEnt entity)
		{
			this.SendPropertyChanging();
			entity.Concerne = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Date")]
	public partial class Date : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_date;
		
		private System.DateTime _date1;
		
		private EntitySet<CommandeEnt> _CommandeEnt;
		
		private EntitySet<LivraisonF> _LivraisonF;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_dateChanging(int value);
    partial void Onid_dateChanged();
    partial void Ondate1Changing(System.DateTime value);
    partial void Ondate1Changed();
    #endregion
		
		public Date()
		{
			this._CommandeEnt = new EntitySet<CommandeEnt>(new Action<CommandeEnt>(this.attach_CommandeEnt), new Action<CommandeEnt>(this.detach_CommandeEnt));
			this._LivraisonF = new EntitySet<LivraisonF>(new Action<LivraisonF>(this.attach_LivraisonF), new Action<LivraisonF>(this.detach_LivraisonF));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_date", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_date
		{
			get
			{
				return this._id_date;
			}
			set
			{
				if ((this._id_date != value))
				{
					this.Onid_dateChanging(value);
					this.SendPropertyChanging();
					this._id_date = value;
					this.SendPropertyChanged("id_date");
					this.Onid_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="date", Storage="_date1", DbType="Date NOT NULL")]
		public System.DateTime date1
		{
			get
			{
				return this._date1;
			}
			set
			{
				if ((this._date1 != value))
				{
					this.Ondate1Changing(value);
					this.SendPropertyChanging();
					this._date1 = value;
					this.SendPropertyChanged("date1");
					this.Ondate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Date_CommandeEnt", Storage="_CommandeEnt", ThisKey="id_date", OtherKey="id_date")]
		public EntitySet<CommandeEnt> CommandeEnt
		{
			get
			{
				return this._CommandeEnt;
			}
			set
			{
				this._CommandeEnt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Date_LivraisonF", Storage="_LivraisonF", ThisKey="id_date", OtherKey="id_date")]
		public EntitySet<LivraisonF> LivraisonF
		{
			get
			{
				return this._LivraisonF;
			}
			set
			{
				this._LivraisonF.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommandeEnt(CommandeEnt entity)
		{
			this.SendPropertyChanging();
			entity.Date = this;
		}
		
		private void detach_CommandeEnt(CommandeEnt entity)
		{
			this.SendPropertyChanging();
			entity.Date = null;
		}
		
		private void attach_LivraisonF(LivraisonF entity)
		{
			this.SendPropertyChanging();
			entity.Date = this;
		}
		
		private void detach_LivraisonF(LivraisonF entity)
		{
			this.SendPropertyChanging();
			entity.Date = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fournisseur")]
	public partial class Fournisseur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_fournisseur;
		
		private string _labelle_fournisseur;
		
		private string _add_fournisseur;
		
		private string _tel_fournisseur;
		
		private System.Data.Linq.Binary _mail_varchar;
		
		private EntitySet<CommandeEnt> _CommandeEnt;
		
		private EntitySet<LivraisonF> _LivraisonF;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_fournisseurChanging(int value);
    partial void Onid_fournisseurChanged();
    partial void Onlabelle_fournisseurChanging(string value);
    partial void Onlabelle_fournisseurChanged();
    partial void Onadd_fournisseurChanging(string value);
    partial void Onadd_fournisseurChanged();
    partial void Ontel_fournisseurChanging(string value);
    partial void Ontel_fournisseurChanged();
    partial void Onmail_varcharChanging(System.Data.Linq.Binary value);
    partial void Onmail_varcharChanged();
    #endregion
		
		public Fournisseur()
		{
			this._CommandeEnt = new EntitySet<CommandeEnt>(new Action<CommandeEnt>(this.attach_CommandeEnt), new Action<CommandeEnt>(this.detach_CommandeEnt));
			this._LivraisonF = new EntitySet<LivraisonF>(new Action<LivraisonF>(this.attach_LivraisonF), new Action<LivraisonF>(this.detach_LivraisonF));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fournisseur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_fournisseur
		{
			get
			{
				return this._id_fournisseur;
			}
			set
			{
				if ((this._id_fournisseur != value))
				{
					this.Onid_fournisseurChanging(value);
					this.SendPropertyChanging();
					this._id_fournisseur = value;
					this.SendPropertyChanged("id_fournisseur");
					this.Onid_fournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_labelle_fournisseur", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string labelle_fournisseur
		{
			get
			{
				return this._labelle_fournisseur;
			}
			set
			{
				if ((this._labelle_fournisseur != value))
				{
					this.Onlabelle_fournisseurChanging(value);
					this.SendPropertyChanging();
					this._labelle_fournisseur = value;
					this.SendPropertyChanged("labelle_fournisseur");
					this.Onlabelle_fournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_fournisseur", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string add_fournisseur
		{
			get
			{
				return this._add_fournisseur;
			}
			set
			{
				if ((this._add_fournisseur != value))
				{
					this.Onadd_fournisseurChanging(value);
					this.SendPropertyChanging();
					this._add_fournisseur = value;
					this.SendPropertyChanged("add_fournisseur");
					this.Onadd_fournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel_fournisseur", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tel_fournisseur
		{
			get
			{
				return this._tel_fournisseur;
			}
			set
			{
				if ((this._tel_fournisseur != value))
				{
					this.Ontel_fournisseurChanging(value);
					this.SendPropertyChanging();
					this._tel_fournisseur = value;
					this.SendPropertyChanged("tel_fournisseur");
					this.Ontel_fournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail_varchar", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary mail_varchar
		{
			get
			{
				return this._mail_varchar;
			}
			set
			{
				if ((this._mail_varchar != value))
				{
					this.Onmail_varcharChanging(value);
					this.SendPropertyChanging();
					this._mail_varchar = value;
					this.SendPropertyChanged("mail_varchar");
					this.Onmail_varcharChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fournisseur_CommandeEnt", Storage="_CommandeEnt", ThisKey="id_fournisseur", OtherKey="id_fournisseur")]
		public EntitySet<CommandeEnt> CommandeEnt
		{
			get
			{
				return this._CommandeEnt;
			}
			set
			{
				this._CommandeEnt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fournisseur_LivraisonF", Storage="_LivraisonF", ThisKey="id_fournisseur", OtherKey="id_fournisseur")]
		public EntitySet<LivraisonF> LivraisonF
		{
			get
			{
				return this._LivraisonF;
			}
			set
			{
				this._LivraisonF.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommandeEnt(CommandeEnt entity)
		{
			this.SendPropertyChanging();
			entity.Fournisseur = this;
		}
		
		private void detach_CommandeEnt(CommandeEnt entity)
		{
			this.SendPropertyChanging();
			entity.Fournisseur = null;
		}
		
		private void attach_LivraisonF(LivraisonF entity)
		{
			this.SendPropertyChanging();
			entity.Fournisseur = this;
		}
		
		private void detach_LivraisonF(LivraisonF entity)
		{
			this.SendPropertyChanging();
			entity.Fournisseur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LivraisonF")]
	public partial class LivraisonF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_livraison;
		
		private int _id_date;
		
		private int _id_produits;
		
		private int _id_fournisseur;
		
		private double _prixvente_fournisseur;
		
		private EntityRef<Date> _Date;
		
		private EntityRef<Fournisseur> _Fournisseur;
		
		private EntityRef<Produits> _Produits;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_livraisonChanging(int value);
    partial void Onid_livraisonChanged();
    partial void Onid_dateChanging(int value);
    partial void Onid_dateChanged();
    partial void Onid_produitsChanging(int value);
    partial void Onid_produitsChanged();
    partial void Onid_fournisseurChanging(int value);
    partial void Onid_fournisseurChanged();
    partial void Onprixvente_fournisseurChanging(double value);
    partial void Onprixvente_fournisseurChanged();
    #endregion
		
		public LivraisonF()
		{
			this._Date = default(EntityRef<Date>);
			this._Fournisseur = default(EntityRef<Fournisseur>);
			this._Produits = default(EntityRef<Produits>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_livraison", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_livraison
		{
			get
			{
				return this._id_livraison;
			}
			set
			{
				if ((this._id_livraison != value))
				{
					this.Onid_livraisonChanging(value);
					this.SendPropertyChanging();
					this._id_livraison = value;
					this.SendPropertyChanged("id_livraison");
					this.Onid_livraisonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_date", DbType="Int NOT NULL")]
		public int id_date
		{
			get
			{
				return this._id_date;
			}
			set
			{
				if ((this._id_date != value))
				{
					if (this._Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_dateChanging(value);
					this.SendPropertyChanging();
					this._id_date = value;
					this.SendPropertyChanged("id_date");
					this.Onid_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produits", DbType="Int NOT NULL")]
		public int id_produits
		{
			get
			{
				return this._id_produits;
			}
			set
			{
				if ((this._id_produits != value))
				{
					if (this._Produits.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produitsChanging(value);
					this.SendPropertyChanging();
					this._id_produits = value;
					this.SendPropertyChanged("id_produits");
					this.Onid_produitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fournisseur", DbType="Int NOT NULL")]
		public int id_fournisseur
		{
			get
			{
				return this._id_fournisseur;
			}
			set
			{
				if ((this._id_fournisseur != value))
				{
					if (this._Fournisseur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_fournisseurChanging(value);
					this.SendPropertyChanging();
					this._id_fournisseur = value;
					this.SendPropertyChanged("id_fournisseur");
					this.Onid_fournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prixvente_fournisseur", DbType="Float NOT NULL")]
		public double prixvente_fournisseur
		{
			get
			{
				return this._prixvente_fournisseur;
			}
			set
			{
				if ((this._prixvente_fournisseur != value))
				{
					this.Onprixvente_fournisseurChanging(value);
					this.SendPropertyChanging();
					this._prixvente_fournisseur = value;
					this.SendPropertyChanged("prixvente_fournisseur");
					this.Onprixvente_fournisseurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Date_LivraisonF", Storage="_Date", ThisKey="id_date", OtherKey="id_date", IsForeignKey=true)]
		public Date Date
		{
			get
			{
				return this._Date.Entity;
			}
			set
			{
				Date previousValue = this._Date.Entity;
				if (((previousValue != value) 
							|| (this._Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Date.Entity = null;
						previousValue.LivraisonF.Remove(this);
					}
					this._Date.Entity = value;
					if ((value != null))
					{
						value.LivraisonF.Add(this);
						this._id_date = value.id_date;
					}
					else
					{
						this._id_date = default(int);
					}
					this.SendPropertyChanged("Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fournisseur_LivraisonF", Storage="_Fournisseur", ThisKey="id_fournisseur", OtherKey="id_fournisseur", IsForeignKey=true)]
		public Fournisseur Fournisseur
		{
			get
			{
				return this._Fournisseur.Entity;
			}
			set
			{
				Fournisseur previousValue = this._Fournisseur.Entity;
				if (((previousValue != value) 
							|| (this._Fournisseur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fournisseur.Entity = null;
						previousValue.LivraisonF.Remove(this);
					}
					this._Fournisseur.Entity = value;
					if ((value != null))
					{
						value.LivraisonF.Add(this);
						this._id_fournisseur = value.id_fournisseur;
					}
					else
					{
						this._id_fournisseur = default(int);
					}
					this.SendPropertyChanged("Fournisseur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produits_LivraisonF", Storage="_Produits", ThisKey="id_produits", OtherKey="id_produits", IsForeignKey=true)]
		public Produits Produits
		{
			get
			{
				return this._Produits.Entity;
			}
			set
			{
				Produits previousValue = this._Produits.Entity;
				if (((previousValue != value) 
							|| (this._Produits.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produits.Entity = null;
						previousValue.LivraisonF.Remove(this);
					}
					this._Produits.Entity = value;
					if ((value != null))
					{
						value.LivraisonF.Add(this);
						this._id_produits = value.id_produits;
					}
					else
					{
						this._id_produits = default(int);
					}
					this.SendPropertyChanged("Produits");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LivraisonW")]
	public partial class LivraisonW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_livraisonW;
		
		private System.DateTime _date_livraisonW;
		
		private int _id_boncmd;
		
		private int _id_produits;
		
		private EntityRef<BonDeCommande> _BonDeCommande;
		
		private EntityRef<Produits> _Produits;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_livraisonWChanging(int value);
    partial void Onid_livraisonWChanged();
    partial void Ondate_livraisonWChanging(System.DateTime value);
    partial void Ondate_livraisonWChanged();
    partial void Onid_boncmdChanging(int value);
    partial void Onid_boncmdChanged();
    partial void Onid_produitsChanging(int value);
    partial void Onid_produitsChanged();
    #endregion
		
		public LivraisonW()
		{
			this._BonDeCommande = default(EntityRef<BonDeCommande>);
			this._Produits = default(EntityRef<Produits>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_livraisonW", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_livraisonW
		{
			get
			{
				return this._id_livraisonW;
			}
			set
			{
				if ((this._id_livraisonW != value))
				{
					this.Onid_livraisonWChanging(value);
					this.SendPropertyChanging();
					this._id_livraisonW = value;
					this.SendPropertyChanged("id_livraisonW");
					this.Onid_livraisonWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_livraisonW", DbType="Date NOT NULL")]
		public System.DateTime date_livraisonW
		{
			get
			{
				return this._date_livraisonW;
			}
			set
			{
				if ((this._date_livraisonW != value))
				{
					this.Ondate_livraisonWChanging(value);
					this.SendPropertyChanging();
					this._date_livraisonW = value;
					this.SendPropertyChanged("date_livraisonW");
					this.Ondate_livraisonWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_boncmd", DbType="Int NOT NULL")]
		public int id_boncmd
		{
			get
			{
				return this._id_boncmd;
			}
			set
			{
				if ((this._id_boncmd != value))
				{
					if (this._BonDeCommande.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_boncmdChanging(value);
					this.SendPropertyChanging();
					this._id_boncmd = value;
					this.SendPropertyChanged("id_boncmd");
					this.Onid_boncmdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produits", DbType="Int NOT NULL")]
		public int id_produits
		{
			get
			{
				return this._id_produits;
			}
			set
			{
				if ((this._id_produits != value))
				{
					if (this._Produits.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produitsChanging(value);
					this.SendPropertyChanging();
					this._id_produits = value;
					this.SendPropertyChanged("id_produits");
					this.Onid_produitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonDeCommande_LivraisonW", Storage="_BonDeCommande", ThisKey="id_boncmd", OtherKey="id_boncmd", IsForeignKey=true)]
		public BonDeCommande BonDeCommande
		{
			get
			{
				return this._BonDeCommande.Entity;
			}
			set
			{
				BonDeCommande previousValue = this._BonDeCommande.Entity;
				if (((previousValue != value) 
							|| (this._BonDeCommande.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BonDeCommande.Entity = null;
						previousValue.LivraisonW.Remove(this);
					}
					this._BonDeCommande.Entity = value;
					if ((value != null))
					{
						value.LivraisonW.Add(this);
						this._id_boncmd = value.id_boncmd;
					}
					else
					{
						this._id_boncmd = default(int);
					}
					this.SendPropertyChanged("BonDeCommande");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produits_LivraisonW", Storage="_Produits", ThisKey="id_produits", OtherKey="id_produits", IsForeignKey=true)]
		public Produits Produits
		{
			get
			{
				return this._Produits.Entity;
			}
			set
			{
				Produits previousValue = this._Produits.Entity;
				if (((previousValue != value) 
							|| (this._Produits.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produits.Entity = null;
						previousValue.LivraisonW.Remove(this);
					}
					this._Produits.Entity = value;
					if ((value != null))
					{
						value.LivraisonW.Add(this);
						this._id_produits = value.id_produits;
					}
					else
					{
						this._id_produits = default(int);
					}
					this.SendPropertyChanged("Produits");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produits")]
	public partial class Produits : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_produits;
		
		private string _labelle_produits;
		
		private int _qtestock_produits;
		
		private double _prixvente_produits;
		
		private string _description_produits;
		
		private string _famille_produits;
		
		private EntitySet<Concerne> _Concerne;
		
		private EntitySet<LivraisonF> _LivraisonF;
		
		private EntitySet<LivraisonW> _LivraisonW;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_produitsChanging(int value);
    partial void Onid_produitsChanged();
    partial void Onlabelle_produitsChanging(string value);
    partial void Onlabelle_produitsChanged();
    partial void Onqtestock_produitsChanging(int value);
    partial void Onqtestock_produitsChanged();
    partial void Onprixvente_produitsChanging(double value);
    partial void Onprixvente_produitsChanged();
    partial void Ondescription_produitsChanging(string value);
    partial void Ondescription_produitsChanged();
    partial void Onfamille_produitsChanging(string value);
    partial void Onfamille_produitsChanged();
    #endregion
		
		public Produits()
		{
			this._Concerne = new EntitySet<Concerne>(new Action<Concerne>(this.attach_Concerne), new Action<Concerne>(this.detach_Concerne));
			this._LivraisonF = new EntitySet<LivraisonF>(new Action<LivraisonF>(this.attach_LivraisonF), new Action<LivraisonF>(this.detach_LivraisonF));
			this._LivraisonW = new EntitySet<LivraisonW>(new Action<LivraisonW>(this.attach_LivraisonW), new Action<LivraisonW>(this.detach_LivraisonW));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produits", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_produits
		{
			get
			{
				return this._id_produits;
			}
			set
			{
				if ((this._id_produits != value))
				{
					this.Onid_produitsChanging(value);
					this.SendPropertyChanging();
					this._id_produits = value;
					this.SendPropertyChanged("id_produits");
					this.Onid_produitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_labelle_produits", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string labelle_produits
		{
			get
			{
				return this._labelle_produits;
			}
			set
			{
				if ((this._labelle_produits != value))
				{
					this.Onlabelle_produitsChanging(value);
					this.SendPropertyChanging();
					this._labelle_produits = value;
					this.SendPropertyChanged("labelle_produits");
					this.Onlabelle_produitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtestock_produits", DbType="Int NOT NULL")]
		public int qtestock_produits
		{
			get
			{
				return this._qtestock_produits;
			}
			set
			{
				if ((this._qtestock_produits != value))
				{
					this.Onqtestock_produitsChanging(value);
					this.SendPropertyChanging();
					this._qtestock_produits = value;
					this.SendPropertyChanged("qtestock_produits");
					this.Onqtestock_produitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prixvente_produits", DbType="Float NOT NULL")]
		public double prixvente_produits
		{
			get
			{
				return this._prixvente_produits;
			}
			set
			{
				if ((this._prixvente_produits != value))
				{
					this.Onprixvente_produitsChanging(value);
					this.SendPropertyChanging();
					this._prixvente_produits = value;
					this.SendPropertyChanged("prixvente_produits");
					this.Onprixvente_produitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description_produits", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description_produits
		{
			get
			{
				return this._description_produits;
			}
			set
			{
				if ((this._description_produits != value))
				{
					this.Ondescription_produitsChanging(value);
					this.SendPropertyChanging();
					this._description_produits = value;
					this.SendPropertyChanged("description_produits");
					this.Ondescription_produitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_famille_produits", DbType="VarChar(50)")]
		public string famille_produits
		{
			get
			{
				return this._famille_produits;
			}
			set
			{
				if ((this._famille_produits != value))
				{
					this.Onfamille_produitsChanging(value);
					this.SendPropertyChanging();
					this._famille_produits = value;
					this.SendPropertyChanged("famille_produits");
					this.Onfamille_produitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produits_Concerne", Storage="_Concerne", ThisKey="id_produits", OtherKey="id_produits")]
		public EntitySet<Concerne> Concerne
		{
			get
			{
				return this._Concerne;
			}
			set
			{
				this._Concerne.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produits_LivraisonF", Storage="_LivraisonF", ThisKey="id_produits", OtherKey="id_produits")]
		public EntitySet<LivraisonF> LivraisonF
		{
			get
			{
				return this._LivraisonF;
			}
			set
			{
				this._LivraisonF.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produits_LivraisonW", Storage="_LivraisonW", ThisKey="id_produits", OtherKey="id_produits")]
		public EntitySet<LivraisonW> LivraisonW
		{
			get
			{
				return this._LivraisonW;
			}
			set
			{
				this._LivraisonW.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Concerne(Concerne entity)
		{
			this.SendPropertyChanging();
			entity.Produits = this;
		}
		
		private void detach_Concerne(Concerne entity)
		{
			this.SendPropertyChanging();
			entity.Produits = null;
		}
		
		private void attach_LivraisonF(LivraisonF entity)
		{
			this.SendPropertyChanging();
			entity.Produits = this;
		}
		
		private void detach_LivraisonF(LivraisonF entity)
		{
			this.SendPropertyChanging();
			entity.Produits = null;
		}
		
		private void attach_LivraisonW(LivraisonW entity)
		{
			this.SendPropertyChanging();
			entity.Produits = this;
		}
		
		private void detach_LivraisonW(LivraisonW entity)
		{
			this.SendPropertyChanging();
			entity.Produits = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staffs")]
	public partial class Staffs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_staff;
		
		private string _nom_staff;
		
		private string _prenom_staff;
		
		private string _add_staff;
		
		private string _tel_staff;
		
		private string _libelleposte_staff;
		
		private string _mail_staff;
		
		private EntitySet<Utilisateur> _Utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_staffChanging(int value);
    partial void Onid_staffChanged();
    partial void Onnom_staffChanging(string value);
    partial void Onnom_staffChanged();
    partial void Onprenom_staffChanging(string value);
    partial void Onprenom_staffChanged();
    partial void Onadd_staffChanging(string value);
    partial void Onadd_staffChanged();
    partial void Ontel_staffChanging(string value);
    partial void Ontel_staffChanged();
    partial void Onlibelleposte_staffChanging(string value);
    partial void Onlibelleposte_staffChanged();
    partial void Onmail_staffChanging(string value);
    partial void Onmail_staffChanged();
    #endregion
		
		public Staffs()
		{
			this._Utilisateur = new EntitySet<Utilisateur>(new Action<Utilisateur>(this.attach_Utilisateur), new Action<Utilisateur>(this.detach_Utilisateur));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_staff", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_staff
		{
			get
			{
				return this._id_staff;
			}
			set
			{
				if ((this._id_staff != value))
				{
					this.Onid_staffChanging(value);
					this.SendPropertyChanging();
					this._id_staff = value;
					this.SendPropertyChanged("id_staff");
					this.Onid_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom_staff", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nom_staff
		{
			get
			{
				return this._nom_staff;
			}
			set
			{
				if ((this._nom_staff != value))
				{
					this.Onnom_staffChanging(value);
					this.SendPropertyChanging();
					this._nom_staff = value;
					this.SendPropertyChanged("nom_staff");
					this.Onnom_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom_staff", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prenom_staff
		{
			get
			{
				return this._prenom_staff;
			}
			set
			{
				if ((this._prenom_staff != value))
				{
					this.Onprenom_staffChanging(value);
					this.SendPropertyChanging();
					this._prenom_staff = value;
					this.SendPropertyChanged("prenom_staff");
					this.Onprenom_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_staff", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string add_staff
		{
			get
			{
				return this._add_staff;
			}
			set
			{
				if ((this._add_staff != value))
				{
					this.Onadd_staffChanging(value);
					this.SendPropertyChanging();
					this._add_staff = value;
					this.SendPropertyChanged("add_staff");
					this.Onadd_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel_staff", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tel_staff
		{
			get
			{
				return this._tel_staff;
			}
			set
			{
				if ((this._tel_staff != value))
				{
					this.Ontel_staffChanging(value);
					this.SendPropertyChanging();
					this._tel_staff = value;
					this.SendPropertyChanged("tel_staff");
					this.Ontel_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelleposte_staff", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string libelleposte_staff
		{
			get
			{
				return this._libelleposte_staff;
			}
			set
			{
				if ((this._libelleposte_staff != value))
				{
					this.Onlibelleposte_staffChanging(value);
					this.SendPropertyChanging();
					this._libelleposte_staff = value;
					this.SendPropertyChanged("libelleposte_staff");
					this.Onlibelleposte_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail_staff", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mail_staff
		{
			get
			{
				return this._mail_staff;
			}
			set
			{
				if ((this._mail_staff != value))
				{
					this.Onmail_staffChanging(value);
					this.SendPropertyChanging();
					this._mail_staff = value;
					this.SendPropertyChanged("mail_staff");
					this.Onmail_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_Utilisateur", Storage="_Utilisateur", ThisKey="id_staff", OtherKey="id_staff")]
		public EntitySet<Utilisateur> Utilisateur
		{
			get
			{
				return this._Utilisateur;
			}
			set
			{
				this._Utilisateur.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utilisateur(Utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.Staffs = this;
		}
		
		private void detach_Utilisateur(Utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.Staffs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilisateur")]
	public partial class Utilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_utilisateur;
		
		private int _id_staff;
		
		private string _mdp_utilisateur;
		
		private string _users_name;
		
		private EntitySet<CommandeEnt> _CommandeEnt;
		
		private EntityRef<Staffs> _Staffs;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_utilisateurChanging(int value);
    partial void Onid_utilisateurChanged();
    partial void Onid_staffChanging(int value);
    partial void Onid_staffChanged();
    partial void Onmdp_utilisateurChanging(string value);
    partial void Onmdp_utilisateurChanged();
    partial void Onusers_nameChanging(string value);
    partial void Onusers_nameChanged();
    #endregion
		
		public Utilisateur()
		{
			this._CommandeEnt = new EntitySet<CommandeEnt>(new Action<CommandeEnt>(this.attach_CommandeEnt), new Action<CommandeEnt>(this.detach_CommandeEnt));
			this._Staffs = default(EntityRef<Staffs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_utilisateur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_utilisateur
		{
			get
			{
				return this._id_utilisateur;
			}
			set
			{
				if ((this._id_utilisateur != value))
				{
					this.Onid_utilisateurChanging(value);
					this.SendPropertyChanging();
					this._id_utilisateur = value;
					this.SendPropertyChanged("id_utilisateur");
					this.Onid_utilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_staff", DbType="Int NOT NULL")]
		public int id_staff
		{
			get
			{
				return this._id_staff;
			}
			set
			{
				if ((this._id_staff != value))
				{
					if (this._Staffs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_staffChanging(value);
					this.SendPropertyChanging();
					this._id_staff = value;
					this.SendPropertyChanged("id_staff");
					this.Onid_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mdp_utilisateur", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mdp_utilisateur
		{
			get
			{
				return this._mdp_utilisateur;
			}
			set
			{
				if ((this._mdp_utilisateur != value))
				{
					this.Onmdp_utilisateurChanging(value);
					this.SendPropertyChanging();
					this._mdp_utilisateur = value;
					this.SendPropertyChanged("mdp_utilisateur");
					this.Onmdp_utilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_name", DbType="VarChar(50)")]
		public string users_name
		{
			get
			{
				return this._users_name;
			}
			set
			{
				if ((this._users_name != value))
				{
					this.Onusers_nameChanging(value);
					this.SendPropertyChanging();
					this._users_name = value;
					this.SendPropertyChanged("users_name");
					this.Onusers_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_CommandeEnt", Storage="_CommandeEnt", ThisKey="id_utilisateur", OtherKey="id_utilisateur")]
		public EntitySet<CommandeEnt> CommandeEnt
		{
			get
			{
				return this._CommandeEnt;
			}
			set
			{
				this._CommandeEnt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_Utilisateur", Storage="_Staffs", ThisKey="id_staff", OtherKey="id_staff", IsForeignKey=true)]
		public Staffs Staffs
		{
			get
			{
				return this._Staffs.Entity;
			}
			set
			{
				Staffs previousValue = this._Staffs.Entity;
				if (((previousValue != value) 
							|| (this._Staffs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staffs.Entity = null;
						previousValue.Utilisateur.Remove(this);
					}
					this._Staffs.Entity = value;
					if ((value != null))
					{
						value.Utilisateur.Add(this);
						this._id_staff = value.id_staff;
					}
					else
					{
						this._id_staff = default(int);
					}
					this.SendPropertyChanged("Staffs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommandeEnt(CommandeEnt entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_CommandeEnt(CommandeEnt entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
	}
}
#pragma warning restore 1591
